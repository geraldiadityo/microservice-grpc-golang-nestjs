// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"api_gateway/config"
	"api_gateway/internal/barang"
	"api_gateway/internal/category"
	"api_gateway/internal/client"
	"api_gateway/internal/role"
	"api_gateway/internal/server"
)

// Injectors from wire.go:

func InitializeServer() (*ServerWithCleanup, error) {
	configConfig, err := config.ProvideConfig()
	if err != nil {
		return nil, err
	}
	grpcClient, err := client.NewGrpcClient(configConfig)
	if err != nil {
		return nil, err
	}
	categoryServiceClient := category.ProvideCategoryClient(grpcClient)
	repositoryCategoryImpl := category.NewRepositoryCategory(categoryServiceClient)
	handlerCategory := category.NewHandlerCategory(repositoryCategoryImpl)
	barangServiceClient := barang.ProvideBarangClient(grpcClient)
	repositoryBarangImpl := barang.NewRepositoryBarang(barangServiceClient)
	handlerBarang := barang.NewHandlerBarang(repositoryBarangImpl)
	roleServiceClient := role.ProvideRoleClient(grpcClient)
	repositoryRoleImpl := role.NewRepositoryRole(roleServiceClient)
	handlerRole := role.NewHandlerRole(repositoryRoleImpl)
	handlers := server.Handlers{
		Category: handlerCategory,
		Barang:   handlerBarang,
		Role:     handlerRole,
	}
	serverServer := server.NewServer(handlers)
	serverWithCleanup := newServerWithCleanup(serverServer, grpcClient)
	return serverWithCleanup, nil
}
